/* DO NOT EDIT THIS FILE - it is machine generated */
#include "native.h"
/* Header for class java_lang_ProcessReaper */

#ifndef _Included_java_lang_ProcessReaper
#define _Included_java_lang_ProcessReaper
struct Hjava_lang_Thread;
struct Hjava_lang_Runnable;
struct Hjava_lang_ThreadGroup;

typedef struct Classjava_lang_ProcessReaper {
    struct HArrayOfChar *name;
    long priority;
    struct Hjava_lang_Thread *threadQ;
    long PrivateInfo;
    long eetop;
    /*boolean*/ long single_step;
    /*boolean*/ long daemon;
    /*boolean*/ long stillborn;
    struct Hjava_lang_Runnable *target;
    /*boolean*/ long interruptRequested;
/* Inaccessible static: activeThreadQ */
    struct Hjava_lang_ThreadGroup *group;
/* Inaccessible static: threadInitNumber */
#define java_lang_ProcessReaper_MIN_PRIORITY	1L
#define java_lang_ProcessReaper_NORM_PRIORITY	5L
#define java_lang_ProcessReaper_MAX_PRIORITY	10L
} Classjava_lang_ProcessReaper;
HandleTo(java_lang_ProcessReaper);

extern void java_lang_ProcessReaper_waitForDeath(struct Hjava_lang_ProcessReaper* self);
#endif
